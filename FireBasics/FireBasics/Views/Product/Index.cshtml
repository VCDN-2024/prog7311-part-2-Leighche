@model IEnumerable<FireBasics.Models.Product>

@{
    ViewData["Title"] = "Index";
}

<style>
    .card {
        width: 300px;
        max-height: 700px;
        background-color: rgba(255, 255, 255);
        backdrop-filter: blur(2px);
        color: black;
        margin: 5px;
    }

    .card-body {
        max-height: 400px;
        overflow-y: auto;
        color: black;
    }

    .card-img-top {
        max-height: 400px;
        object-fit: cover;
    }

    body {
        background-position: 300px top;
        background-repeat: no-repeat;
        background-size: 1650px 950px;
        background-attachment: fixed;
        margin: 0;
        padding: 0;
    }

    h1 {
        color: darkorange;
        font-weight: 700;
        font-size: 50px;
    }

    .card-container {
        display: flex;
        flex-wrap: wrap;
        justify-content: space-between;
        gap: 10px;
    }

    .parent {
        position: relative;
        margin-top: 40px;
        margin-bottom: 30px;
    }

    .input {
        outline: none;
        border: none;
        border-radius: 100px;
        padding: 10px 20px;
        font-size: 20px;
        width: 300px;
        background-color: yellowgreen;
        color: white;
        transition: width 0.3s ease;
    }

        .input::placeholder {
            color: white;
        }

    .btnsearch {
        width: 60px;
        height: 50px;
        padding: 5px 10px;
        cursor: pointer;
        border-radius: 100px;
        border: none;
        background: green;
        color: white;
        display: inline;
        box-shadow: 0 0 5px rgba(0, 0, 0, 0.2);
        position: absolute;
        top: 0px;
        right: 900px;
        transition: transform 0.3s ease;
        margin-left: 10px;
    }

    .search-container {
        display: flex;
        align-items: center;
        margin-bottom: 20px;
        position: relative;
    }

    .input {
        outline: none;
        border: none;
        border-radius: 100px;
        padding: 10px 20px;
        font-size: 20px;
        width: 300px;
        background-color: yellowgreen;
        color: white;
        transition: width 0.3s ease;
    }

 
    #startDate {
        position: absolute;
        right: 700px; 
        border-radius: 10px; 
        height: 40px;
        font-size: 16px;
        border-color: forestgreen;
    }

    #endDate {
        position: absolute;
        right: 544px; 
        border-radius: 10px; 
        height: 40px;
        font-size: 16px;
        border-color: forestgreen;
    }

    .availability-tag {
        padding: 3px 5px;
        border-radius: 3px;
    }

    .availability-yes {
        background-color: green;
        color: white;
    }

    .availability-no {
        background-color: red;
        color: white;
    }

</style>

<br />
<br />

<h1><strong>Green Market Place</strong></h1>

<p>
    <a asp-action="Create">Create New</a>
</p>

<div class="parent">
    <form asp-controller="Product" asp-action="Index" method="get" id="filterForm">
        <div class="search-container">
            <button class="btnsearch" type="submit">
                <i class="fa-solid fa-magnifying-glass"></i>
            </button>
            <input class="input" type="text" name="searchString" placeholder="Search..." value="@ViewData["CurrentFilter"]" />
            <input type="date" id="startDate" name="startDate" value="@ViewData["CurrentStartDate"] != null ? ViewData[" CurrentStartDate"].ToString() : null" placeholder="Start Date" />
            <input type="date" id="endDate" name="endDate" value="@ViewData["CurrentEndDate"] != null ? ViewData[" CurrentEndDate"].ToString() : null" placeholder="End Date" />
        </div>
    </form>
</div>

<div class="card-container">
    @foreach (var item in Model)
    {
        <div class="card mb-3">
            <h3 class="card-header">R @Html.DisplayFor(modelItem => item.Price)</h3>
            <img src="@item.ImageUrl" class="card-img-top" alt="Product Image">
            <div class="card-body">
                <h5 class="card-title">@Html.DisplayFor(modelItem => item.ProductName)</h5>
                <h6 class="card-subtitle mb-2 text-muted">Quantity: @Html.DisplayFor(modelItem => item.Quantity)</h6>
                <p class="card-text">
                    Availability: <span class="availability-tag @(item.Availability == "YES" ? "availability-yes" : "availability-no")">@Html.DisplayFor(modelItem => item.Availability)</span>
                </p>
                <p class="card-text">Production Date: @Html.DisplayFor(modelItem => item.ProductionDate)</p>
                <p class="card-text">Category: @(item.Category?.CategoryName ?? "No Category")</p>
            </div>
            <div class="card-footer text-muted">
                <p class="card-text">Farmer: @(item.Farmer != null ? Html.ActionLink(item.Farmer.Name, "FarmerDetails", new { id = item.FarmerId }) : "No Farmer")</p>
            </div>
        </div>
    }

</div>
